# -*- coding: utf-8 -*-
"""210927_osint_anotacoes_aula9_youtubeapi_thiagoaraujo

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dD0ZgACwWxyMUnEQa1MSHI5EvUUsGRkd
"""

!python --version

"""Como vocês aprenderam, vamos importar os módulos que serão usados. Neste caso, são apenas 2: o Requests, para fazer requisições online, e o Pandas, para lidar com os dados."""

import requests
import pandas as pd
from pandas import json_normalize

"""Após importar os módulos, vamos definir algumas variáveis básicas, como o código do canal a ser analisado e a chave que o Google dá para usar a API"""

chave="INSIRASUACHAVE"

canal="UCMLt0rs3lAvXvW05e5GoeJw"

"""**Primeira coisa**: precisamos pegar os dados básicos do canal, incluindo o código da playlist de uploads. Iniciamos formatando a URL."""

url_canal = f"https://www.googleapis.com/youtube/v3/channels?part=id%2Csnippet%2CcontentDetails%2Cstatistics&id={canal}&key={chave}"

url_canal

"""É hora de fazer a 1ª requisição! Vamos acionar a API para pegar o código da playlist de uploads"""

resposta = requests.get(url_canal)

dados_canal=resposta.json()

"""Com a resposta correta (código 200), é hora de achar o código dentro do dicionário que a API do Google devolve"""

dados_canal.keys()

codigo_playlist=dados_canal["items"][0]["contentDetails"]["relatedPlaylists"]["uploads"]

"""**Segundo passo**: com o código, podemos acionar o outro endpoint  para pegar a lista de vídeos."""

url_videos=f'https://www.googleapis.com/youtube/v3/playlistItems?part=snippet,contentDetails&maxResults=50&playlistId={codigo_playlist}&key={chave}'

url_videos

"""A nova URL está pronta. Agora é fazer uma nova requisição"""

resposta_videos = requests.get(url_videos)

dados_videos=resposta_videos.json()

"""Mesma coisa: com os dados que a API devolveu, é preciso encontrar onde estão só as informações sobre os vídeos"""

dados_videos.keys()

videos=dados_videos['items']

"""Pronto! Agora a parte mais fácil: para analisar os dados, o Pandas é a melhor opção. Há uma função que encaixa os JSONs em um DataFrame corretamente. É o json_normalize."""

df=json_normalize(videos)

df

"""Legal, mas cadê o resto dos vídeos? Como funcionam os tokens"""

dados_videos.keys()

proxima_pagina=dados_videos['nextPageToken']

url_videos=f'https://www.googleapis.com/youtube/v3/playlistItems?part=snippet,contentDetails&maxResults=50&playlistId={codigo_playlist}&key={chave}&pageToken={proxima_pagina}'

url_videos

resposta_videos = requests.get(url_videos)
dados_videos=resposta_videos.json()
videos=dados_videos['items']
temp=json_normalize(videos)